cljdb is a project to get the JDB to work with Clojure in EMACS.  It can be used with other projects like cider or the 
now defunct nrepl.

Usage:

 Clone the project
 git clone https://github.com/m0smith/cljdb.git
 
 Add to .emacs
 (load-file "<cloned dir>/cljdb/cljdb.el")
 
 Using cider:
 
   In project.clj:
     ;; JDB Socket attach 9900
     :jvm-opts [
             "-server" 
             ; "-Xms128M" "-Xmx256M"
             ;; Use these options in development to allow debugging
             ;; with jswat on localhost port 9900
             "-Xdebug"
             "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9900"
             ]
    or 
      ;; JDB Shared memory attach clojuredebug
      :jvm-opts [
             "-server" 
             ;; "-Xms128M" "-Xmx256M"
             ;; Use these options in development to allow debugging
             ;; with jswat on localhost port 9900
             "-Xdebug"
             "-Xrunjdwp:transport=dt_shmem,server=y,suspend=n,address=clojuredebug"
             ]
   
    (cider-jack-in)
    (jdb "jdb -attach 9900") or (jdb "jdb -attach clojuredebug")
    
    Load a .clj file with C-c C-k
    
    Some interesting keystrokes:
    C-x C-a C-b	cljdb-break
    C-x C-a C-d	gud-down2
    C-x C-a C-f	gud-finish
    C-x C-a C-l	cljdb-print-locals
    C-x C-a C-n	gud-next
    C-x C-a C-p	cljdb-print-exp
    C-x C-a C-q cljdb-dump-exp
    C-x C-a C-r	gud-cont
    C-x C-a C-s	gud-step
    C-x C-a ^	gud-step-up
    C-x C-a C-t	cljdb-print-this
    C-x C-a C-u	gud-up2
    C-x C-a C-w	gud-where
    C-x C-a <	gud-up
    C-x C-a >	gud-down
    
